
/*
Given two strings s and t which consist of only lowercase letters.

String t is generated by random shuffling string s and then add one more letter at a random position.

Find the letter that was added in t.

Example:
Input:
s = "abcd"
t = "abcde"

Output:
e

Explanation:
'e' is the letter that was added.


*/
package easy2;

import java.util.HashMap;
import java.util.Map;

/**
 * @author Tom Qian
 * @email tomqianmaple@outlook.com
 * @github https://github.com/bluemapleman
 * @date 2018年2月5日
 */
public class FindtheDifference
{
    public static void main(String[] args)
    {
        System.out.println(findTheDifference("", "b"));
    }
    
    public static char findTheDifference(String s, String t) {
        Map<Character,Integer> maps=new HashMap<Character,Integer>(),mapt=new HashMap<Character,Integer>();
        char[] arrs=s.toCharArray(),arrt=t.toCharArray();
        for(int i=0;i<arrs.length;i++) {
            char key=arrs[i];
            if(maps.containsKey(key))
                maps.put(key, maps.get(key)+1);
            else
                maps.put(key, 1);
        }
        
        for(int i=0;i<arrt.length;i++) {
            char key=arrt[i];
            if(mapt.containsKey(key))
                mapt.put(key, mapt.get(key)+1);
            else
                mapt.put(key, 1);
        }
        
        // if add a character that doesn't exist in s, then key sets of respective map for string s and t differ in size
        // else differ in certain value for key.
        
        if(mapt.keySet().size()!=maps.keySet().size()) {
            mapt.keySet().removeAll(maps.keySet());
            for(Character key:mapt.keySet())
                return key;
        }
        else {
            for(Character key:mapt.keySet()) {
                if(maps.get(key).compareTo(mapt.get(key))!=0)
                    return key;
            }
        }
        
        return 0;
    }
}

